"use strict";
var index_1 = require('../index');
var italy = require("./italy.json");
var expect = require("chai").expect;
var worldDB = "https://couchdb.kernel.online/public/geoworld";
var pos0 = [37.533057, 15.060421];
var pos1 = [37.504192, 15.068489];
var latlng = { latitude: pos0[0], longitude: pos0[1] };
var latlng2 = { latitude: pos1[0], longitude: pos1[1] };
var loc;
before(function () {
    loc = new index_1.default({ state: italy, worldDB: worldDB });
});
describe("class instantiation with standards", function () {
    it("validate worldDB conf", function () {
        expect(loc.world).to.be.an('Array');
        expect(loc.state).to.eq(italy);
        expect(loc.bigWorld).to.not.exist;
        expect(loc.localization).to.not.exist;
        expect(loc.state).to.be.an('Object');
        expect(loc).to.be.ok;
        expect(loc).to.be.an('Object');
    });
});
describe("position is ok?", function () {
    this.timeout(10000);
    it("verificate working of localization", function (done) {
        loc.setPosition(latlng).then(function (c) {
            expect(loc.state).to.be.an('Object');
            expect(c).to.be.an('Array');
            expect(c[0]).to.be.an('Object');
            expect(c[0].nativeName).to.be.a('string');
            done();
        }).catch(function (c) {
            console.log(c);
            expect(c).to.not.exsist;
            done();
        });
    });
    it("verificate working of 2 localization", function (done) {
        loc.setPosition(latlng2).then(function (c) {
            expect(loc.state).to.be.an('Object');
            expect(c).to.be.an('Array');
            expect(c[0]).to.be.an('Object');
            expect(c[0].nativeName).to.be.a('string');
            done();
        }).catch(function (c) {
            console.log(c);
            expect(c).to.not.exsist;
            done();
        });
    });
});

//# sourceMappingURL=data:application/json;base64,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LENBQUMsQ0FBQyxDQUFBO0FBQ04sQ0FBQyxDQUFDLENBQUEiLCJmaWxlIjoidGVzdC9sb2NhbC5qcyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBMb2NhbGl6ZSBmcm9tICcuLi9pbmRleCdcbmltcG9ydCAqIGFzIG1vY2hhIGZyb20gXCJtb2NoYVwiO1xuXG5sZXQgaXRhbHk9cmVxdWlyZShcIi4vaXRhbHkuanNvblwiKVxuXG5cbmNvbnN0IGV4cGVjdCA9IHJlcXVpcmUoXCJjaGFpXCIpLmV4cGVjdDtcblxuY29uc3Qgd29ybGREQiA9IFwiaHR0cHM6Ly9jb3VjaGRiLmtlcm5lbC5vbmxpbmUvcHVibGljL2dlb3dvcmxkXCI7XG5cblxuY29uc3QgcG9zMCA9IFszNy41MzMwNTcsIDE1LjA2MDQyMV1cbmNvbnN0IHBvczEgPSBbMzcuNTA0MTkyLCAxNS4wNjg0ODldXG5cbmNvbnN0IGxhdGxuZyA9IHsgbGF0aXR1ZGU6IHBvczBbMF0sIGxvbmdpdHVkZTogcG9zMFsxXSB9O1xuY29uc3QgbGF0bG5nMiA9IHsgbGF0aXR1ZGU6IHBvczFbMF0sIGxvbmdpdHVkZTogcG9zMVsxXSB9O1xuXG5cbmxldCBsb2M6IExvY2FsaXplO1xuXG5iZWZvcmUoZnVuY3Rpb24gKCkge1xuXG4gICAgbG9jID0gbmV3IExvY2FsaXplKHsgc3RhdGU6IGl0YWx5LCB3b3JsZERCOiB3b3JsZERCIH0pXG5cblxufSlcblxuZGVzY3JpYmUoXCJjbGFzcyBpbnN0YW50aWF0aW9uIHdpdGggc3RhbmRhcmRzXCIsIGZ1bmN0aW9uICgpIHtcbiAgICBpdChcInZhbGlkYXRlIHdvcmxkREIgY29uZlwiLCBmdW5jdGlvbiAoKSB7XG4gICAgICAgIGV4cGVjdChsb2Mud29ybGQpLnRvLmJlLmFuKCdBcnJheScpO1xuICAgICAgICBleHBlY3QobG9jLnN0YXRlKS50by5lcShpdGFseSk7XG4gICAgICAgIGV4cGVjdChsb2MuYmlnV29ybGQpLnRvLm5vdC5leGlzdDtcbiAgICAgICAgZXhwZWN0KGxvYy5sb2NhbGl6YXRpb24pLnRvLm5vdC5leGlzdDtcbiAgICAgICAgZXhwZWN0KGxvYy5zdGF0ZSkudG8uYmUuYW4oJ09iamVjdCcpO1xuICAgICAgICBleHBlY3QobG9jKS50by5iZS5vaztcbiAgICAgICAgZXhwZWN0KGxvYykudG8uYmUuYW4oJ09iamVjdCcpO1xuXG4gICAgfSlcblxuXG59KVxuXG5kZXNjcmliZShcInBvc2l0aW9uIGlzIG9rP1wiLCBmdW5jdGlvbiAoKSB7XG4gICAgdGhpcy50aW1lb3V0KDEwMDAwKTtcblxuICAgIGl0KFwidmVyaWZpY2F0ZSB3b3JraW5nIG9mIGxvY2FsaXphdGlvblwiLCBmdW5jdGlvbiAoZG9uZSkge1xuICAgICAgICBsb2Muc2V0UG9zaXRpb24obGF0bG5nKS50aGVuKChjKSA9PiB7XG5cbiAgICAgICAgICAgIGV4cGVjdChsb2Muc3RhdGUpLnRvLmJlLmFuKCdPYmplY3QnKTtcbiAgICAgICAgICAgIGV4cGVjdChjKS50by5iZS5hbignQXJyYXknKTtcbiAgICAgICAgICAgIGV4cGVjdChjWzBdKS50by5iZS5hbignT2JqZWN0Jyk7XG4gICAgICAgICAgICBleHBlY3QoY1swXS5uYXRpdmVOYW1lKS50by5iZS5hKCdzdHJpbmcnKTtcbiAgICAgICAgICAgIGRvbmUoKVxuICAgICAgICB9KS5jYXRjaCgoYykgPT4ge1xuICAgICAgICAgICAgY29uc29sZS5sb2coYylcbiAgICAgICAgICAgIGV4cGVjdChjKS50by5ub3QuZXhzaXN0XG4gICAgICAgICAgICBkb25lKClcbiAgICAgICAgfSlcbiAgICB9KVxuICAgIGl0KFwidmVyaWZpY2F0ZSB3b3JraW5nIG9mIDIgbG9jYWxpemF0aW9uXCIsIGZ1bmN0aW9uIChkb25lKSB7XG5cbiAgICAgICAgbG9jLnNldFBvc2l0aW9uKGxhdGxuZzIpLnRoZW4oKGMpID0+IHtcblxuICAgICAgICAgICAgZXhwZWN0KGxvYy5zdGF0ZSkudG8uYmUuYW4oJ09iamVjdCcpO1xuICAgICAgICAgICAgZXhwZWN0KGMpLnRvLmJlLmFuKCdBcnJheScpO1xuICAgICAgICAgICAgZXhwZWN0KGNbMF0pLnRvLmJlLmFuKCdPYmplY3QnKTtcbiAgICAgICAgICAgIGV4cGVjdChjWzBdLm5hdGl2ZU5hbWUpLnRvLmJlLmEoJ3N0cmluZycpO1xuICAgICAgICAgICAgZG9uZSgpO1xuXG4gICAgICAgIH0pLmNhdGNoKChjKSA9PiB7XG5cbiAgICAgICAgICAgIGNvbnNvbGUubG9nKGMpXG4gICAgICAgICAgICBleHBlY3QoYykudG8ubm90LmV4c2lzdFxuICAgICAgICAgICAgZG9uZSgpXG4gICAgICAgICAgICBcbiAgICAgICAgfSlcblxuXG5cbiAgICB9KVxufSkiXSwic291cmNlUm9vdCI6Ii9zb3VyY2UvIn0=
